image: node:16.13.1

cache:
  untracked: true
  key: '$CI_COMMIT_REF_SLUG'
  paths:
    - node_modules/
    - 'packages/*/node_modules'
  policy: pull

variables:
  RELEASE_MSG: 'chore(release): publish'

stages:
  - setup
  - build
  - test
  - docs
  - publish
  - release

install_dependencies:
  stage: setup
  cache:
    untracked: true
    key: '$CI_COMMIT_REF_SLUG'
    paths:
      - node_modules/
      - 'packages/*/node_modules'
    policy: pull-push
  script:
    - npm ci
  only:
    - branches

build:
  stage: build
  artifacts:
    paths:
      - 'packages/*/dist'
      - 'packages/*/es'
      - 'packages/*/lib'
      - 'packages/*/styles'
      - 'packages/*/types'
    expire_in: 1 hr
  script:
    - npm run build:es
    - npm run build:umd
  only:
    - branches

lint:
  stage: test
  script:
    - npm run lint:check
  needs: [install_dependencies]
  only:
    - branches
  except:
    variables:
      - $CI_COMMIT_TITLE == $RELEASE_MSG

test:
  stage: test
  script:
    - npm run test
  dependencies:
    - build
  only:
    - branches
  except:
    variables:
      - $CI_COMMIT_TITLE == $RELEASE_MSG

generate_docs:
  stage: docs
  needs: [build]
  trigger:
    include: packages/docs/.gitlab-ci.yml
    strategy: depend
  allow_failure: false
  variables:
    PARENT_PIPELINE_ID: $CI_PIPELINE_ID
  only:
    - branches

publish_canary:
  stage: publish
  script:
    - nexus_login
    - 'node_modules/.bin/lerna publish --registry https://$NEXUS_REPO/ --canary --force-publish --dist-tag $CI_COMMIT_REF_SLUG --preid $CI_COMMIT_REF_SLUG --yes'
  dependencies:
    - build
  needs: [build]
  only:
    - branches
  except:
    variables:
      - $CANARY_PUBLISH_DISABLED
      - $CI_COMMIT_TITLE == $RELEASE_MSG

publish_release:
  stage: publish
  script:
    - nexus_login
    - node_modules/.bin/lerna publish from-git --registry https://$NEXUS_REPO/ --yes
  dependencies:
    - build
  only:
    refs:
      - branches
    variables:
      - $CI_COMMIT_TITLE == $RELEASE_MSG

github_push:
  stage: publish
  variables:
    GIT_STRATEGY: clone
  script:
    - merge_to_github_branch
    - push_to_github
  dependencies:
    - install_dependencies
  when: manual
  only:
    refs:
      - master

npm_publish:
  stage: publish
  variables:
    GIT_STRATEGY: clone
  script:
    - publish_to_npm
  dependencies:
    - build
  when: manual
  only:
    refs:
      - branches
    variables:
      - $CI_COMMIT_TITLE == $RELEASE_MSG

release:
  stage: release
  variables:
    GIT_STRATEGY: clone
  script:
    - try_release
  dependencies:
    - build
  when: manual
  only:
    refs:
      - master
  except:
    variables:
      - $CI_COMMIT_TITLE == $RELEASE_MSG

.auto_devops: &auto_devops |
  # Auto DevOps variables and functions
  [[ "$TRACE" ]] && set -x

  export VERSION_TAG=$(if [ "$CI_COMMIT_TAG" == "" ]; then echo $CI_COMMIT_REF_SLUG.$CI_PIPELINE_IID.$CI_COMMIT_SHORT_SHA; else echo ${CI_COMMIT_TAG}; fi)

  function git_login() {
    git config --global user.name "$GIT_USER"
    git config --global user.email "$GIT_EMAIL"
    git config --global http.sslVerify false
    git remote set-url origin "https://$GIT_USER:$GIT_PWD@gitlab.dev.eoss-cloud.it/$CI_PROJECT_PATH.git"
  }

  function nexus_login() {
     echo //$NEXUS_REPO/:_auth=$NEXUS_AUTH_TOKEN > ~/.npmrc
  }

  function github_setup() {
    git config --global user.name "$GITHUB_USER"
    git config --global user.email "$GITHUB_EMAIL"
    git remote add github "https://$GITHUB_TOKEN@$GITHUB_REPO.git"
  }

  function npm_login() {
    echo //registry.npmjs.org/:_authToken=$NPM_AUTH_TOKEN > ~/.npmrc
  }

  function merge_to_github_branch() {
    git_login
    git checkout github/master
    git merge $CI_COMMIT_SHA --no-commit || true
    git checkout --theirs -- packages/*/CHANGELOG.md
    npx replace-in-file /https://gitlab.dev.eoss-cloud.it/$CI_PROJECT_PATH/g https://$GITHUB_REPO packages/*/CHANGELOG.md --isRegex
    git add packages/*/CHANGELOG.md
    git rm -r deploy || true
    git rm -r -f packages/docs || true
    git rm typedoc.json || true
    git rm tsconfig.typedoc.json || true
    git rm .gitlab-ci.yml || true
    git checkout --ours -- package.json
    git commit -m 'chore: merge from upstream repository' --no-verify
    git push origin
  }

  function push_to_github() {
    github_setup
    git push github github/master:main
  }

  function publish_to_npm() {
    npm_login
    node_modules/.bin/lerna publish from-package --registry https://registry.npmjs.org/ --yes
  }

  function try_release() {
    git checkout $CI_COMMIT_REF_SLUG
    if [ $(git rev-parse HEAD) == $CI_COMMIT_SHA ]; then
      git_login
      node_modules/.bin/lerna version --yes
    else
       echo 'Commit is not on branch tip. Unable to perform a release'
       exit 1
    fi
  }

before_script:
  - *auto_devops
